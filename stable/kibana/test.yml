NAME: yongxiaodong
LAST DEPLOYED: Tue Oct 27 20:41:28 2020
NAMESPACE: default
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: kibana/templates/tests/test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: yongxiaodong-kibana-test
  labels:
    app: yongxiaodong-kibana
    chart: "kibana-3.2.7"
    heritage: "Helm"
    release: "yongxiaodong"
  annotations:
    "helm.sh/hook": test-success
spec:
  initContainers:
    - name: test-framework
      image: "dduportal/bats:0.4.0"
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: yongxiaodong-test
      image: "dwdraju/alpine-curl-jq"
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
        - mountPath: /tools
          name: tools
  volumes:
  - name: tests
    configMap:
      name: yongxiaodong-kibana-test
  - name: tools
    emptyDir: {}
  restartPolicy: Never
MANIFEST:
---
# Source: kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: yongxiaodong-kibana
  labels:
    app: kibana
    chart: "kibana-3.2.7"
    release: yongxiaodong
    heritage: Helm
data:
  kibana.yml: |
    elasticsearch.hosts: http://elasticsearch:9200
    server.host: "0"
    server.name: kibana
---
# Source: kibana/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: yongxiaodong-kibana-test
  labels:
    app: yongxiaodong-kibana
    chart: "kibana-3.2.7"
    heritage: "Helm"
    release: "yongxiaodong"
data:
  run.sh: |-
    @test "Test Status" {
      url="http://yongxiaodong-kibana:443/api/status"

      # retry for 1 minute
      run curl -s -o /dev/null -I -w "%{http_code}" --retry 30 --retry-delay 2 $url

      code=$(curl -s -o /dev/null -I -w "%{http_code}" $url)
      body=$(curl $url)
      if [ "$code" == "503" ]
      then
        skip "Kibana Unavailable (503), can't get status - see pod logs: $body"
      fi

      result=$(echo $body | jq -cr '.status.statuses[]')
      [ "$result" != "" ]

      result=$(echo $body | jq -cr '.status.statuses[] | select(.state != "green")')
      [ "$result" == "" ]
    }
---
# Source: kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
    chart: kibana-3.2.7
    release: yongxiaodong
    heritage: Helm
  name: yongxiaodong-kibana
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 5601
      protocol: TCP

  selector:
    app: kibana
    release: yongxiaodong
---
# Source: kibana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kibana
    chart: "kibana-3.2.7"
    heritage: Helm
    release: yongxiaodong
  name: yongxiaodong-kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
      release: yongxiaodong
  revisionHistoryLimit: 3
  template:
    metadata:
      annotations:
        checksum/config: 4847b289436c62cff2668fb54736dd36092f709ff614de01c45f3d5b6b6774ef
      labels:
        app: kibana
        release: "yongxiaodong"
    spec:
      serviceAccountName: default
      containers:
      - name: kibana
        image: "docker.elastic.co/kibana/kibana-oss:6.7.0"
        imagePullPolicy: IfNotPresent
        env:
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        resources:
          {}
        volumeMounts:
        - name: kibana
          mountPath: "/usr/share/kibana/config/kibana.yml"
          subPath: kibana.yml
      tolerations:
        []
      volumes:
        - name: kibana
          configMap:
            name: yongxiaodong-kibana

NOTES:
To verify that yongxiaodong-kibana has started, run:

  kubectl --namespace=default get pods -l "app=kibana"

Kibana can be accessed:

  * From outside the cluster, run these commands in the same shell:

    export POD_NAME=$(kubectl get pods --namespace default -l "app=kibana,release=yongxiaodong" -o jsonpath="{.items[0].metadata.name}")
    echo "Visit http://127.0.0.1:5601 to use Kibana"
    kubectl port-forward --namespace default $POD_NAME 5601:5601
